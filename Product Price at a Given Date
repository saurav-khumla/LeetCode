Table: Products

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| new_price     | int     |
| change_date   | date    |
+---------------+---------+
(product_id, change_date) is the primary key (combination of columns with unique values) of this table.
Each row of this table indicates that the price of some product was changed to a new price at some date.
 

Write a solution to find the prices of all products on 2019-08-16. Assume the price of all products before any change is 10.

Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
Products table:
+------------+-----------+-------------+
| product_id | new_price | change_date |
+------------+-----------+-------------+
| 1          | 20        | 2019-08-14  |
| 2          | 50        | 2019-08-14  |
| 1          | 30        | 2019-08-15  |
| 1          | 35        | 2019-08-16  |
| 2          | 65        | 2019-08-17  |
| 3          | 20        | 2019-08-18  |
+------------+-----------+-------------+
Output: 
+------------+-------+
| product_id | price |
+------------+-------+
| 2          | 50    |
| 1          | 35    |
| 3          | 10    |
+------------+-------+

solution :

select
product_id,
first_value(new_price) over (partition by product_id order by change_date desc) as price
from
products where change_date <= '2019-08-16'
union
select
product_id,
10 as price
from products
group by product_id
having min(change_date)> '2019-08-16'


or 


/* Write your T-SQL query statement below */

select distinct l.product_id, l.new_price as price
  from Products l
inner join (
            select product_id,max(change_date) as mx_date
              from Products
              where change_date <= '2019-08-16'
            group by product_id
  
           ) r
        on l.product_id =r.product_id and l.change_date =r.mx_date
--where r.product_id is not null                    
union all
select distinct product_id, 10 as price
  from Products p
 where change_date > '2019-08-16' and product_id not in (select product_id 
                                         from Products
                                        where change_date <= '2019-08-16'
                                        )
